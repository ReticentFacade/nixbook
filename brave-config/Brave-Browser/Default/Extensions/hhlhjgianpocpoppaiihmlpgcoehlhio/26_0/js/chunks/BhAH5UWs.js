import{b as e,c as t,H as a,a as n,C as i,D as s,f as r,g as o}from"./CAmFpRSf.js";import{D as c}from"./B3DQGssQ.js";class g{static addListeners(){chrome.commands.onCommand.addListener(g.#e)}static async getApplicatorCommands(){const e=await chrome.commands.getAll();return{default:e.find((e=>"apply_default_highlight"===e.name))??{},indexed:e.filter((e=>{const t=new RegExp("^apply_highlight\\.(\\d+)$").exec(e.name);return 2===t?.length}))}}static async#e(r){const o=await e.queryActiveTab();if(!o)throw new Error("no active tab");if(!await t.contains("scripting",t.getOrigins(o.url)))return;const l=new e(o.id),h=new a(o.id);let d=null;switch(r){case"undo_last_create_highlight":return g.onUndoCommand(o.id);case"delete_highlight":const e=await l.getActiveHighlightID();if(e)return h.delete(e);break;case"apply_default_highlight":d=(await(new n).getAll()).highlightDefinitions;const[t,w]=d.map(((e,t)=>[e,t])).find((([e])=>e.default));if("number"!=typeof w)break;r=`apply_highlight.${w}`;default:const u=new RegExp("^apply_highlight\\.(\\d+)$").exec(r);if(!u||2!==u.length)throw new Error("unknown command "+r);d||(d=(await(new n).getAll()).highlightDefinitions);const m=parseInt(u[1]);if(!d||d.length<=m)throw new Error("Unable to match command index to definition");const f=d[m];if(f.hidden)return;const _=f.className,p=await l.getSelectionRange();if(!p)throw new Error;const y=new i;if(p.collapsed){const e=await l.getActiveHighlightID();if(!e)return;const t=new s,n=await t.getDocument(e,{_exclude_doc_keys:"text"});if(n.className!==_){if(!await a.canUpdate(n.className,_))return;return h.update(n._id,_)}if(!await y.get("unselectAfterHighlight"))return;return await h.delete(n._id),l.selectRange(n.range)}{const e=await l.getRangeText(p);if(!e)throw new Error;if(await h.create(p,c.formatMatch(o.url),e,_),await y.get("unselectAfterHighlight"))return l.selectHighlight()}}}static async onUndoCommand(t){const n=new a(t);let[i,{needsReload:o}]=await n.undo();if(i.some((e=>!e.ok)))throw new Error;if(o)try{const a=new e(t),n=(await a.get()).url,i=c.formatMatch(n),g=new s;let l=await g.getMatchingDocuments(i,{verbs:"create",excludeDeletedDocs:!0,excludeDocKeys:"text"});await Promise.all(l.map((({_id:e})=>a.removeHighlight(e)))),l=await g.getMatchingDocuments(i,{excludeDocKeys:"text"});const h=await a.playbackDocuments(l),d=new r(t);await d.setEnabled(h>0),await d.setBadgeText(h>0?h.toLocaleString():null),o=!1}catch(e){}return o}}let l=class t{static addListeners(e=[]){if(Array.isArray(e)||(e=[e]),0===e.length)chrome.runtime.onMessage.addListener(t.onSharedMessage);else{const a=new Set(e);chrome.runtime.onMessage.addListener((function(e){if(a.has(e.id))return t.onSharedMessage.apply(null,arguments)}))}}static onSharedMessage(e,a,n){switch(e.id){case"__on_storage_changed":return t.#t(e.changes,e.areaName,n),!0;case"__storage_get_all":return t.#a(e.storageName,n),!0;case"__delete_highlight":return t.#n(e.highlightId,n),!0}return!1}static#n(t,n){!async function(){try{const i=await e.queryActiveTab();if(!i)throw new Error;const s=new a(i.id);await s.delete(t),n(!0)}catch(e){n(!1)}}()}static#i(e,t){!async function(){try{const n=new a;await n.onDeleteDocument(e),t(!0)}catch(e){t(!1)}}()}static#t(t,a,i){!async function(){try{a===n.AREA_NAME&&t.highlightDefinitions&&await o.createSelectionMenu(),await e.sendMessageAll("on_storage_changed",{changes:t,areaName:a}),i()}catch(e){i()}}()}static#a(e,t){let a;a="highlightStorage"===e?new n:new i,async function(){const e=await a.getAll();t(e)}()}};export{l as C,g as a};
