import"../chunks/Pk1FvCws.js";import{U as t,S as e}from"../chunks/B3DQGssQ.js";import"../../static/js/node.memorystream.min.js";import{D as s,a as i,C as o,d as n,b as a,H as r}from"../chunks/CAmFpRSf.js";import"../../static/js/pouchdb-8.0.1-supersimplehighlighter.min.js";import"../../static/js/pouchdb.replication-stream.no-eval.min.js";import"../../static/js/pouchdb.load.min.js";import{O as c}from"../chunks/BGvEKeUN.js";import{C as l,a as h}from"../chunks/BhAH5UWs.js";import{S as p}from"../chunks/CVw90xmA.js";angular.module("optionsApp",["optionsControllers","stylesControllers","bookmarksControllers","advancedControllers","aboutControllers","ui-rangeSlider","customFilters","optionsFilters"]).config(["$compileProvider",function(t){t.aHrefSanitizationWhitelist(/^\s*(https?|chrome-extension|moz-extension|file):/),t.imgSrcSanitizationWhitelist(/^\s*(chrome-extension|moz-extension):/)}]),function(){const t=location.hash&&document.querySelector(`a[href="${location.hash}"]`)||null;t&&(t.click(),setTimeout((()=>window.scrollTo(0,0)),1))}(),angular.module("optionsFilters",[]).filter("alphaPercent",(function(){return function(t){return 100*t+"%"}})),angular.module("aboutControllers",[]).controller("about",["$scope",function(e){class s{static#t=[{href:t.createExtensionAssetURL(chrome.i18n.getMessage("help_pathname",["chrome"])),text:chrome.i18n.getMessage("help")},{href:t.createExtensionAssetURL(chrome.i18n.getMessage("faq_pathname")),text:chrome.i18n.getMessage("faq")},{href:t.createExtensionAssetURL(chrome.i18n.getMessage("changelog_pathname")),text:chrome.i18n.getMessage("changelog")},{href:t.createExtensionAssetURL(chrome.i18n.getMessage("privacy_policy_pathname")),text:chrome.i18n.getMessage("privacy_policy")}];static#e=[{href:"https://angularjs.org/",text:"AngularJS"},{href:"https://danielcrisp.github.io/angular-rangeslider/",text:"Angular-Rangeslider"},{href:"https://getbootstrap.com/",text:"Bootstrap"},{href:"https://glyphicons.com/",text:"Glyph Icons"},{href:"https://jquery.com/",text:"jQuery"},{href:"https://pouchdb.com/",text:"PouchDB"}];static#s=[{work:{href:"https://www.iconarchive.com/show/soft-scraps-icons-by-hopstarter/Highlighter-Blue-icon.html",text:"Highlighter Blue Icon"},author:{href:"https://hopstarter.deviantart.com",text:"Hopstarter"},license:{href:"https://creativecommons.org/licenses/by-nc-nd/3.0/",text:"Attribution-NonCommercial-NoDerivs 3.0 Unported (CC BY-NC-ND 3.0)"}},{work:{href:"https://www.iconfinder.com/icons/32453/alert_attention_danger_error_exclamation_hanger_message_problem_warning_icon",text:"Exclamation"},author:{href:"https://www.aha-soft.com/",text:"Aha-soft"},license:{href:"https://creativecommons.org/licenses/by/3.0/",text:"Attribution 3.0 Unported (CC BY 3.0)"}},{work:{href:"https://www.flickr.com/photos/colemama/5264395373/",text:"Highlighter On Page (Promotional Image)"},author:{href:"https://www.flickr.com/photos/colemama/",text:"Marie Coleman"},license:{href:"https://creativecommons.org/licenses/by-nc-sa/2.0/",text:"Attribution-NonCommercial-ShareAlike 2.0 Generic (CC BY-NC-SA 2.0)"}}];constructor(t){this.scope=t,this.scope.manifest=chrome.runtime.getManifest(),this.scope.links=s.#t,this.scope.libraries=s.#e,this.scope.licenses=s.#s}}new s(e)}]);class g{static async dump(t,e){const s=new RegExp("^_design/");return t.pouchDB.dump(e,{filter:({_id:t})=>!t.match(s)})}static async load(t,e,s=!1){if(!s)return await t.destroyDB(!0),await t.pouchDB.load(e),await t.infoDB();{const t=new PouchDB("_temporary");try{return await t.load(e),await t.info()}finally{await t.destroy()}}}}angular.module("advancedControllers",[]).controller("advanced",["$scope","$rootScope",async function(t,a){class r{static MAGIC="Super Simple Highlighter Exported Database";static#i=new Intl.NumberFormat(void 0,{style:"percent"});static#o=200;#n=null;get db(){return this.#n||(this.#n=new s),this.#n}#a=null;updateActiveTaskFlagsDebounceTimeoutID=null;scope=null;rootScope=null;constructor(t,e){this.scope=t,this.rootScope=e;for(const t of[this.onClickExport,this.onFilesChange,this.onClickCompact,this.onClickSaveDiagnostics,this.onClickResetStyles,this.onClickEraseAll,this.onClickRefreshDebugText])this.scope[t.name]=t.bind(this);this.scope.importProgress=0,document.querySelector("#files").addEventListener("change",this.onFilesChange.bind(this)),PouchDB.activeTasks.add=new Proxy(PouchDB.activeTasks.add,{apply:this.#r.bind(this)}),PouchDB.activeTasks.update=new Proxy(PouchDB.activeTasks.update,{apply:this.#c.bind(this)}),PouchDB.activeTasks.remove=new Proxy(PouchDB.activeTasks.remove,{apply:this.#l.bind(this)})}async init(){await this.db.infoDB(),await this.#h()}async#h(){const t=await this.db.infoDB(),e=await navigator.storage.estimate();this.scope.debugText=JSON.stringify({info:t,storage:e},null,2)+"\n",this.scope.storageUsage=e.usageDetails?.indexedDB??e.usage,this.scope.storageQuota=e.quota}#p(){"number"!=typeof this.updateActiveTaskFlagsDebounceTimeoutID&&(this.updateActiveTaskFlagsDebounceTimeoutID=setTimeout(async function(){const t=this;let e,i,o;t.updateActiveTaskFlagsDebounceTimeoutID=null;for(const{name:t}of s.getActiveTasksList())"view_indexing"===t?e=!0:"database_compaction"===t&&(i=!0),t.startsWith("replication")&&(o=!0);t.rootScope.isDatabaseTaskActive=e||i||o,e==t.scope.isIndexingTaskActive&&i==t.scope.isCompactionTaskActive&&o==t.scope.isReplicationTaskActive||(t.scope.isIndexingTaskActive=e,t.scope.isCompactionTaskActive=i,t.scope.isReplicationTaskActive=o,await t.#h(),t.scope.$apply())}.bind(this),r.#o))}#r(t,e,s){const i=s[0],o=Reflect.apply(t,PouchDB.activeTasks,s);return this.#p(),"database_compaction"===i.name&&(this.#a=o,(async()=>{const{update_seq:t}=await this.db.infoDB();this.scope.maxCompactionProgress=t})()),o}#c(t,e,s){const i=s[0],o=Reflect.apply(t,PouchDB.activeTasks,s);if(this.#a===i){const{completed_items:t}=s[1];let e;if(this.scope.compactionProgress=t,t+1===this.scope.maxCompactionProgress)e=chrome.i18n.getMessage("compaction_status_finishing");else if(0!=this.scope.maxCompactionProgress){const t=r.#i.format(this.scope.compactionProgress/this.scope.maxCompactionProgress);e=chrome.i18n.getMessage("compaction_status_compacting",[t])}else e=null;e!=this.scope.compactionStatus&&(this.scope.compactionStatus=e,this.scope.$apply())}return o}#l(t,e,s){const i=s[0],o=Reflect.apply(t,PouchDB.activeTasks,s);return this.#p(),i===this.#a&&(this.#a=null,this.scope.compactionProgress=0,this.scope.$apply()),o}#g(t=0,e=0,s=null){this.scope.importProgress=e?t/e*100:0,this.scope.importStatus=s,this.scope.$apply()}#u(t=0,e=0,s=null,i=!1){this.scope.exportProgress=e?t/e*100:0,this.scope.exportStatus=s,this.scope.exportGathering=t>0&&t<e,i&&this.scope.$apply()}async onClickRefreshDebugText(){await this.#h(),this.scope.$apply()}async onClickCompact(){this.#a=null,await this.db.cleanupDocuments(),await this.db.cleanupViews(),await this.db.compactDB(),this.scope.compactionProgress=0,await this.#h()}async onClickSaveDiagnostics(){this.scope.diagnosticsProgress=100;const t={manifest:{version:chrome.runtime.getManifest().version},db:await this.db.diagnoseDB()},e=await(new i).getAll({defaults:!1});e.highlightDefinitions?.forEach((t=>{delete t.title})),t.storage=e;const s=document.createElement("a");s.download="diagnostics.json",s.href=URL.createObjectURL(new Blob([JSON.stringify(t,void 0,2)],{type:"application/json"}));try{const t=document.createEvent("MouseEvent");t.initMouseEvent("click",!0,!0,window,0,0,0,0,0,!1,!1,!1,!1,0,null),s.dispatchEvent(t)}finally{this.scope.diagnosticsProgress=0,this.scope.$apply(),URL.revokeObjectURL(s.href)}}async onClickResetStyles(){if(window.confirm(chrome.i18n.getMessage("confirm_reset_default_styles")))return(new i).removeAll()}async onClickEraseAll(){window.confirm(chrome.i18n.getMessage("confirm_reset_extension"))&&(await(new i).clear(),await(new o).clear(),await this.db.destroyDB(),location.reload())}async onFilesChange(){const t=event.target.files[0],e=(await t.text()).split("\n").filter((t=>t.length>0));let s;try{const t=JSON.parse(e.shift());if(t.magic!==r.MAGIC||1!==t.version)throw new Error("Invalid file identifier");s=t.subversion??1,this.#g(1,8,chrome.i18n.getMessage("import_status_preparing"));const o=JSON.parse(e.shift()),a=o.highlightDefinitions;if(Array.isArray(a)){const t=n.getDefaults();o.highlightDefinitions=a.map((e=>{const s={...t,...e};return s.style={...t.style,...s.style},s}))}null==o.sharedHighlightStyle&&(o.sharedHighlightStyle={});try{const t=e.join("\n");this.#g(3,8,chrome.i18n.getMessage("import_status_importing_db")),await g.load(this.db,t)}catch(t){throw new Error("Error loading database",{cause:t})}try{const t=new i;this.#g(4,8,chrome.i18n.getMessage("import_status_importing_styles")),await t.setAll(o)}catch(t){throw new Error("Error importing highlight styles",{cause:t})}}catch(t){return void alert(`${t.message}\n\nCause: ${t.cause?.toString()??"Not specified"}`)}this.#g(5,8,chrome.i18n.getMessage("import_status_indexing")),await this.db.ensureDesignDocuments(!0),s<18&&(this.#g(6,8,chrome.i18n.getMessage("import_status_fixup_invalid_delete_documents")),await this.db.removeInvalidDeleteDocuments()),this.#g(7,8,chrome.i18n.getMessage("import_status_cleanup_views")),await this.db.cleanupViews(),this.#g(0),location.reload()}async onClickExport(){const t={magic:r.MAGIC,version:1,subversion:chrome.runtime.getManifest().version};let s=[JSON.stringify(t)];this.#u(0,2,chrome.i18n.getMessage("export_status_preparing"));const o=await(new i).getAll({defaults:!1});s.push("\n"),s.push(JSON.stringify(o));const n=new window.memorystream(null,{readable:!0,writable:!0});let a=s.map((t=>t.length)).reduce(((t,e)=>t+e),0),c=null;n.on("data",(t=>{s.push("\n"),s.push(t),a+=t.byteLength;const i=e.formatBytes(a,!0,0);i!=c&&(c=i,this.#u(1,2,chrome.i18n.getMessage("export_status_on_data",[i]),!0))})),n.on("end",(()=>{this.#u(0,2,null,!0);const t=document.createElement("a");t.download=chrome.i18n.getMessage("advanced_backup_export_file_name"),t.href=URL.createObjectURL(new Blob(s,{type:"application/x-ndjson"}));try{const e=document.createEvent("MouseEvent");e.initMouseEvent("click",!0,!0,window,0,0,0,0,0,!1,!1,!1,!1,0,null),t.dispatchEvent(e)}finally{URL.revokeObjectURL(t.href)}})),await g.dump(this.db,n)}}await new r(t,a).init()}]),angular.module("bookmarksControllers",[]).controller("bookmarks",["$scope","$rootScope",async function(n,l){class h{static#m={ID:"hysteresisTimerID",TIMEOUT:500};static#d=[1,5,10,20,30,40,50,100,200,500,1e3];static#f=[0,1,5,10,20,30,40,50,100,200,500,1e3,2e3,5e3,1e4,2e4,5e4,1e5];#n=null;get db(){return this.#n||(this.#n=new s),this.#n}#y=null;async#w(){return this.#y||(this.#y=await this.db.getLastDocumentDates()),this.#y}#_=[];scope=null;rootScope=null;constructor(e,s){this.scope=e,this.rootScope=s,this.scope.trimUrl=`${t.createExtensionAssetURL(chrome.i18n.getMessage("faq_pathname"))}#trim`,this.scope.popupHighlightTextMaxLength=5e3,this.scope.manifest=chrome.runtime.getManifest(),this.scope.documentFilterText="",this.scope.filters={group:t=>t.docs.some((t=>this.scope.filters.document(t))),document:t=>{const e=this.scope.documentFilterText.toLowerCase();return 0===e.length||-1!=t.match.toLowerCase().indexOf(e)||"string"==typeof t.title&&-1!=t.title.toLowerCase().indexOf(e)||t._snippets?.some((t=>"string"==typeof t.text&&-1!=t.text.toLowerCase().indexOf(e)))}};for(const t of[this.onClickHighlight,this.onClickTrimHighlight,this.onClickToggleHighlights,this.onClickShowAllHighlights,this.onClickExpandHighlight,this.onClickExpandAllHighlights,this.onClickRemoveHighlight,this.onClickRemoveAllHighlights,this.onClickRemoveEveryHighlight,this.onClickOpenOverview,this.onClickSaveOverview,this.onClickCopyOverview])this.scope[t.name]=t.bind(this);const i=document.querySelector("#bookmarks");i.addEventListener("mouseenter",this.onMouseEnterBookmarks,{capture:!0,passive:!0}),i.addEventListener("mouseleave",this.onMouseLeaveBookmarks,{capture:!0,passive:!0}),this.#_=[]}async init(){const t=new o,e=await t.get(["options_bookmarks_group_by","options_bookmarks_ascending_order"]);this.scope.options={groupBy:e.options_bookmarks_group_by,invert:!e.options_bookmarks_ascending_order},"first_date"!=this.scope.options.groupBy&&"last_date"!=this.scope.options.groupBy&&"highlights_count"!=this.scope.options.groupBy&&"title"!=this.scope.options.groupBy&&(this.scope.options.groupBy="title"),this.scope.initProgress=0,this.scope.maxInitProgress=100,this.scope.initStatus=chrome.i18n.getMessage("init_status_get_sums"),this.rootScope.isBookmarksInitializing=!0;const s=(await this.db.getSums()).filter((({value:t})=>t>0));this.scope.initProgress=50,this.scope.$apply(),this.rootScope.totalSitesCount=s.length,this.scope.totalHighlightsCountAvailable=!0,this.scope.totalHighlightsCount=s.map((({value:t})=>t)).reduce(((t,e)=>t+e),0);const i=s.length;this.scope.initProgress=i,this.scope.maxInitProgress=i+s.length,this.scope.initStatus=chrome.i18n.getMessage("init_status_get_matching"),this.scope.$apply(),this.#_=(await this.db.getFirstDocuments(s.map((({key:t})=>t)),{excludeDocKeys:"text"},((t,e)=>{this.scope.initProgress=i+t,this.scope.maxInitProgress=i+e,this.scope.$apply()}))).map(((t,e)=>[t,s[e].value])).filter((t=>t)).map((([t,e])=>{const s=t;return s._highlightsCount=e,s})),this.scope.initProgress=0,this.scope.$apply(),this.rootScope.isBookmarksInitializing=!1,await this.groupDocuments(),this.scope.$apply(),this.scope.$watchCollection("options",this.onOptionsCollectionChanged.bind(this))}async#v(t){const e=await this.db.getMatchingDocuments(t.match,{excludeDeletedDocs:!0});t._approxBytesCount=e.map((t=>Object.values(t).reduce(((t,e)=>t+JSON.stringify(e).length),0))).reduce(((t,e)=>t+e),0);const{highlightDefinitions:s}=await(new i).getAll();t._snippets=e.map((({_id:t,date:e,className:i,text:o,textLength:n})=>{let a={docId:t,date:e,className:i};const r=s.find((({className:t})=>i===t));return a.textColorEqualsBackground=r?.text_color_equals_background??!1,void 0!==n?a.isTextTrimmed=!0:o?(n=o.length,o=o.substring(0,5e3)):n=0,a.text=o??"",a.expandedTextLength=n,a})),t._expandableSnippetsCount=t._snippets.filter((({isExpanded:t,expandedTextLength:e})=>!t&&e>5e3)).length,t._trimmableHighlightsCount=t._snippets.filter((({isTextTrimmed:t,expandedTextLength:e})=>!t&&e>5e3)).length}async groupDocuments(t=this.scope.options){const s={},i={docs:[]},o={docs:[],value:"#"},n="last_date"===t.groupBy&&this.#_.length>0?await this.#w():null;for(const e of this.#_){if(e._highlightsCount<=0)continue;const a=(()=>{switch(t.groupBy){case"first_date":return Math.floor(new Date(e.date).getTime()/864e5);case"last_date":const t=n.get(e.match)??e.date;return Math.floor(new Date(t).getTime()/864e5);case"highlights_count":const s=e._highlightsCount;for(const[t,e]of h.#d.entries()){if(t+1>=h.#d.length)break;const i=h.#d[t+1];if(s>=e&&s<i)return t}return h.#d.length-1;default:const i=e.title;return"string"==typeof i&&i.length>0&&i[0].toUpperCase()||void 0}})();(()=>{switch(typeof a){case"undefined":return i;case"string":if("title"===t.groupBy&&!isNaN(parseInt(a,10)))return o;default:return s.hasOwnProperty(a)||(s[a]={docs:[],value:a}),s[a]}})().docs.push(e)}let a;switch(t.groupBy){case"title":break;case"first_date":case"last_date":case"highlights_count":case"bytes_count":a=(t,e)=>t-e}let r=Object.getOwnPropertyNames(s).sort(a).map((t=>s[t]));Array.prototype.push.apply(r,[o,i].filter((({docs:t})=>t.length>0)));for(const s of r){switch(typeof s.value){case"undefined":s.title=void 0;break;case"number":if("first_date"==t.groupBy||"last_date"==t.groupBy)s.title=new Date(864e5*s.value).toLocaleDateString(void 0,{weekday:"long",year:"numeric",month:"long",day:"numeric"});else if("highlights_count"==t.groupBy){const t=h.#d[s.value];if(s.value+1>=h.#d.length)s.title=`${t.toLocaleString()} +`;else{const e=h.#d[s.value+1];s.title=`${t.toLocaleString()} - ${(e-1).toLocaleString()}`}}else if("bytes_count"==t.groupBy){const t=1e3*h.#f[s.value],i=[!0,0];if(s.value+1>=h.#f.length)s.title=`${e.formatBytes(t,...i)} +`;else{const o=1e3*h.#f[s.value+1];s.title=`${e.formatBytes(t,...i)} - ${e.formatBytes(o,...i)}`}}break;case"string":s.title=s.value}delete s.value,s.docs.sort((()=>{switch(t.groupBy){case"title":return(t,e)=>void 0===t&&void 0===e?0:(t.title||"").localeCompare(e.title||"");case"first_date":return({date:t},{date:e})=>t-e;case"last_date":return({match:t},{match:e})=>(n?.get(t)??0)-(n?.get(e)??0);case"highlights_count":return({_highlightsCount:t},{_highlightsCount:e})=>t-e}})())}if(t.invert)for(const t of r.reverse())t.docs.reverse();this.scope.groups=r}async onOptionsCollectionChanged(t,e){const s=new o;await s.set({options_bookmarks_group_by:t.groupBy,options_bookmarks_ascending_order:!t.invert}),await this.groupDocuments(),this.scope.$apply()}onMouseEnterBookmarks(){const t=event.target;t.classList.contains("page-text-list-item")&&("number"==typeof t[h.#m.ID]&&(clearTimeout(t[h.#m.ID]),delete t[h.#m.ID]),t.querySelector(".list-item-close").style.setProperty("opacity","1"))}onMouseLeaveBookmarks(){const t=event.target;if(!t.classList.contains("page-text-list-item"))return;const e=t.querySelector(".list-item-close");t[h.#m.ID]=setTimeout((()=>{delete t[h.#m.ID],e.style.setProperty("opacity","0")}),h.#m.TIMEOUT)}async onClickToggleHighlights(t){event.preventDefault(),t._isHighlightsShown=!t._isHighlightsShown,t._isHighlightsShown?void 0===t._snippets&&(await this.#v(t),this.scope.$apply()):delete t._snippets}async onClickShowAllHighlights(t){null!=t&&event.preventDefault();const e=t?.docs??this.#_;let s=!1;for(const t of e)t._isHighlightsShown||(t._isHighlightsShown=!0,void 0===t._snippets&&(await this.#v(t),s=!0));s&&this.scope.$apply()}async onClickTrimHighlight(t,e){event.preventDefault(),event.stopPropagation();const{ok:s,id:i,rev:o}=await this.db.trimDocumentText(t.docId);if(!s)return;const n=await this.db.getDocument(t.docId,{rev:o});t.text=n.text,t.isTextTrimmed=!0,t.isExpanded=!1,e._trimmableHighlightsCount-=1,this.scope.$apply()}async onClickExpandHighlight(t,e){if(event.preventDefault(),event.stopPropagation(),!await this.#C(t,e)){const{match:e}=await this.db.getDocument(t.docId);return a.create({url:e})}e._expandableSnippetsCount-=1,this.scope.$apply()}async onClickExpandAllHighlights(t){let e;if(t)event.preventDefault(),e=t;else if(e=this.#_.filter((({_isHighlightsShown:t,_expandableSnippetsCount:e})=>t&&e>0)),0===e.length)return;for(const t of e)await Promise.all(t._snippets.filter((({isExpanded:t,expandedTextLength:e})=>!t&&e>5e3)).map((e=>this.#C(e,t)))),t._expandableSnippetsCount=0;this.scope.$apply()}async#C(t,e){const s=await this.db.getDocument(t.docId);let i;if(void 0!==s.textLength){const s=(await a.query({url:encodeURI(e.match),status:"complete"})).map((t=>t.id)).filter((t=>t!==chrome.tabs.TAB_ID_NONE));if(!(s.length>0))return!1;{const e=new a(s[0]);i=await e.getHighlightText(t.docId)}}else i=s.text;return i&&(t.text=i,t.isExpanded=!0),!0}async onClickHighlight(t,e){const s=(await a.query({url:encodeURI(e.match),status:"complete"})).map((t=>t.id)).filter((t=>t!==chrome.tabs.TAB_ID_NONE));if(0===s.length)return a.create({url:e.match});const i=new a(s[0]);await i.scrollToHighlight(t.docId)&&await chrome.tabs.update(i.tabId,{active:!0})}async onClickRemoveHighlight(t,e,s){event.stopPropagation();const i=new r;await i.delete(t.docId);const o=e._snippets.indexOf(t);if(e._snippets.splice(o,1),this.scope.totalHighlightsCount-=1,!t.isTextTrimmed&&t.expandedTextLength>5e3&&(e._trimmableHighlightsCount-=1),0===e._snippets.length&&(this.rootScope.totalSitesCount-=1),e._highlightsCount-=1,e._highlightsCount<=0){const t=s.docs.indexOf(e);s.docs.splice(t,1)}else e._approxBytesCount-=JSON.stringify(t).length,await this.groupDocuments();this.scope.$apply()}async onClickRemoveAllHighlights(t,e){if(Array.isArray(t)||(t=[t]),0!==t.length&&window.confirm(chrome.i18n.getMessage(1===t.length?"confirm_remove_all_highlights_single":"confirm_remove_all_highlights_plural"))){for(const s of[...t]){const{match:t}=s;await this.db.removeMatchingDocuments(t);const i=e.docs.indexOf(s);e.docs.splice(i,1),this.rootScope.totalSitesCount-=1,this.scope.totalHighlightsCount-=s._highlightsCount}this.scope.$apply()}}async onClickRemoveEveryHighlight(){0!==this.scope.groups.length&&window.confirm(chrome.i18n.getMessage("confirm_remove_every_highlight"))&&(await this.db.destroyDB(),this.scope.groups=[],this.#_=[],this.rootScope.totalSitesCount=0,this.scope.totalHighlightsCount=0,this.scope.$apply())}async onClickOpenOverview(t){event.preventDefault();const e=t?null:this.scope.options.groupBy,s=!t&&this.scope.options.invert,i=c.getUrl(t?.map((({match:t})=>t)),"location",!1,e,s);await a.create({url:i})}async#b(t,e){const s=t?null:this.scope.options.groupBy,i=!t&&this.scope.options.invert;return c.getFormattedText(t?.map((({match:t})=>t)),"location",!1,s,i,"markdown",e)}async onClickSaveOverview(t){event.preventDefault();const e=await this.#b(t,!0);if(!e)return;const s=document.createElement("a");s.download=chrome.i18n.getMessage("save_overview_file_name"),s.href=URL.createObjectURL(new Blob([e],{type:"text/markdown"}));try{const t=document.createEvent("MouseEvent");t.initMouseEvent("click",!0,!0,window,0,0,0,0,0,!1,!1,!1,!1,0,null),s.dispatchEvent(t)}finally{URL.revokeObjectURL(s.href)}}async onClickCopyOverview(t){event.preventDefault();const e=await this.#b(t,!1);if(e)return navigator.clipboard.writeText(e)}}await new h(n,l).init()}]),l.addListeners("__on_storage_changed"),angular.module("optionsControllers",[]).controller("options",["$scope",function(e){new class{constructor(e){this.scope=e,this.scope.links=[{href:t.createExtensionAssetURL(chrome.i18n.getMessage("help_pathname",["chrome"])),text:chrome.i18n.getMessage("help")}],this.scope.manifest=chrome.runtime.getManifest(),this.scope.isInitialised=!0}}(e)}]),angular.module("stylesControllers",[]).controller("styles",["$scope",async function(t){class s{static#D=500;static#k={MODAL:"#myModal"};constructor(t,s){this.scope=t,this.scope.highlightClassName=e.newRandomID(),this.scope.highlightDefinitions=[],this.styleSheetManager=new p(s).init(),chrome.storage.onChanged.addListener(this.onStorageChanged.bind(this));for(const t of[this.onClickStyle,this.onClickRemoveStyle,this.onClickCreateNewStyle])this.scope[t.name]=t.bind(this);this.scope.$watchCollection("options",this.onOptionsCollectionChanged.bind(this)),this.scope.$watchCollection("highlightDefinitions",this.onHighlightDefinitionsCollectionChanged.bind(this))}async init(){this.scope.commands=await h.getApplicatorCommands(),this.scope.options=await(new o).get(["unselectAfterHighlight","allowNestedHighlights","highlightBoxShadowEnabled"]);const t=await(new i).getAll();return await this.onStorageChanged({sharedHighlightStyle:{newValue:t.sharedHighlightStyle},highlightDefinitions:{newValue:t.highlightDefinitions}},i.AREA_NAME)}async onStorageChanged(t,e){if(e!==i.AREA_NAME)return;let s="sharedHighlightStyle";if(t[s]){const e=t[s],i=this.scope.highlightClassName;if(e.oldValue&&this.styleSheetManager.deleteRule(i),e.newValue){const t=await(new o).getAll();this.styleSheetManager.setRule({className:i,style:e.newValue},!1,t)}}if(s="highlightDefinitions",!t[s])return;const a=t[s];if(a.oldValue)for(const{className:t}of a.oldValue)this.styleSheetManager.deleteRule(t);const r=t.newValue?a.newValue:(await(new i).getAll())[s];this.scope.highlightDefinitions=r.map((t=>({...n.getDefaults(),...t}))),this.scope.$apply()}onOptionsCollectionChanged(t,e){t!=e&&(this.debounceTimerID=(e=>(e&&clearTimeout(e),setTimeout((async()=>{await(new o).set(t),this.debounceTimerID=0}),s.#D)))(this.debounceTimerID))}async onHighlightDefinitionsCollectionChanged(t){const e=await(new o).getAll();for(let s of t)s={...s},delete s.blur,this.styleSheetManager.setRule(s,!1,e)}onClickStyle(t){this.scope.modal={dialogTitle:chrome.i18n.getMessage("edit_style"),saveButtonTitle:chrome.i18n.getMessage("update"),highlightDefinition:angular.copy(this.scope.highlightDefinitions[t]),onClickMakeDefault:async()=>{let t=new Set;if(this.scope.highlightDefinitions.map((t=>angular.copy(t))).forEach((e=>{const s=e.className==this.scope.modal.highlightDefinition.className;e.default!=s&&(e.default=s,t.add(e))})),this.scope.modal.highlightDefinition.default=!0,t.size>0)return(new i).set(Array.from(t))},onClickSave:async()=>{if($(s.#k.MODAL).modal("hide"),this.scope.modal.highlightDefinition)return(new i).set(this.scope.modal.highlightDefinition)}},$(s.#k.MODAL).modal()}async onClickRemoveStyle(t){if(event.stopPropagation(),window.confirm(chrome.i18n.getMessage("confirm_remove_style")))return(new i).remove(t.className)}onClickCreateNewStyle(){this.scope.modal={dialogTitle:chrome.i18n.getMessage("new_style"),saveButtonTitle:chrome.i18n.getMessage("create"),highlightDefinition:n.createObject(),onClickSave:async()=>{if($(s.#k.MODAL).modal("hide"),this.scope.modal.highlightDefinition)return(new i).set(this.scope.modal.highlightDefinition)}},$(s.#k.MODAL).modal()}}await new s(t,document).init()}]);
